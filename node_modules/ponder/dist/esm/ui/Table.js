import { Box, Text, render } from "ink"; // Assuming you're using ink for CLI UI components
import React from "react";
const MAX_COLUMN_WIDTH = 24;
export function Table(props) {
    const { columns, rows } = props;
    const formattedRows = rows.map((row) => columns.reduce((acc, column) => ({
        ...acc,
        [column.key.toString()]: column.format
            ? column.format(row[column.key], row)
            : row[column.key],
    }), {}));
    const columnWidths = columns.map((column) => {
        let maxWidth = Math.max(...formattedRows.map((row) => row[column.key] !== undefined ? row[column.key].toString().length : 9), column.title.length);
        maxWidth = Math.min(maxWidth, MAX_COLUMN_WIDTH);
        return maxWidth;
    });
    return (React.createElement(Box, { flexDirection: "column" },
        React.createElement(Box, { flexDirection: "row", key: "title" },
            columns.map(({ title }, index) => (React.createElement(React.Fragment, { key: `title-${title}` },
                React.createElement(Text, null, "\u2502"),
                React.createElement(Box, { width: columnWidths[index], justifyContent: "flex-start", marginX: 1 },
                    React.createElement(Text, { bold: true, wrap: "truncate-end" }, title))))),
            React.createElement(Text, null, "\u2502")),
        React.createElement(Box, { flexDirection: "row", key: "separator" },
            React.createElement(Text, null, "\u251C"),
            columnWidths.map((width, index) => (
            // biome-ignore lint/suspicious/noArrayIndexKey: <explanation>
            React.createElement(Text, { key: index },
                "─".repeat(width + 2),
                index < columns.length - 1 ? "┼" : "┤")))),
        formattedRows.map((row, rowIndex) => (React.createElement(Box, { flexDirection: "row", 
            // biome-ignore lint/suspicious/noArrayIndexKey: <explanation>
            key: rowIndex },
            columns.map(({ key, align }, index) => (
            // biome-ignore lint/suspicious/noArrayIndexKey: <explanation>
            React.createElement(React.Fragment, { key: index },
                React.createElement(Text, null, "\u2502"),
                React.createElement(Box, { width: columnWidths[index], justifyContent: align === "left" ? "flex-start" : "flex-end", marginX: 1 },
                    React.createElement(Text, { wrap: "truncate-end" }, row[key]))))),
            React.createElement(Text, null, "\u2502"))))));
}
export function printTable(props) {
    const table = (React.createElement(React.Fragment, null,
        React.createElement(Text, null, " "),
        React.createElement(Table, { ...props }),
        React.createElement(Text, null, " ")));
    const instance = render(table);
    instance.cleanup();
}
//# sourceMappingURL=Table.js.map